# -*- coding: utf-8 -*-
"""LZW.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uLgl9M8NHFQILmxhoznxPX0RXVKqAHjo
"""

import numpy as np
import time


def InitializeDict(file):
    for char in file:
        if char not in Dictionary.keys():
            Dictionary[char] = len(Dictionary)

    np.save("InitializedDictionaryKeys.npy", np.array(
        list(Dictionary.keys())), allow_pickle=True)
    np.save("InitializedDictionaryValues.npy", np.array(
        list(Dictionary.values())), allow_pickle=True)


def RunLZW(file):
    global Dictionary
    global EncoderOutput

    index = 0

    while index < len(file):
        TempIndex, TrackingString = index+1, file[index]

        while TempIndex < len(file) and (TrackingString + file[TempIndex]) in Dictionary.keys():
            TrackingString += file[TempIndex]
            TempIndex += 1

        EncoderOutput = np.append(EncoderOutput, Dictionary[TrackingString])

        if TempIndex < len(file):
            Dictionary[TrackingString+file[TempIndex]] = len(Dictionary)

        index = TempIndex

    np.save("EncoderOutput.npy", EncoderOutput, allow_pickle=True)

def Load():
    global EncoderOutput

    EncoderOutput = np.load("EncoderOutput.npy", allow_pickle=True)
    keys, values = np.load("InitializedDictionaryKeys.npy", allow_pickle=True), np.load(
        "InitializedDictionaryValues.npy", allow_pickle=True)

    for i in range(len(keys)):
        Dictionary[values[i]] = keys[i]


def RunInverseLZW():
    global EncoderOutput
    global Dictionary
    global Document

    Document += Dictionary[EncoderOutput[0]]
    TempString = Dictionary[EncoderOutput[0]]

    for index in range(1, len(EncoderOutput)):
        Document += Dictionary[EncoderOutput[index]]
        TempString += Dictionary[EncoderOutput[index]]
        TempIndex = 1

        while TempIndex <= len(TempString) and TempString[:TempIndex] in Dictionary.values():
            TempIndex += 1

        if TempString[:TempIndex] not in Dictionary.values():
            Dictionary[len(Dictionary)] = TempString[:TempIndex]
            TempString = TempString[TempIndex-1:]

    open("Output.txt", "w").write(Document)

Document = open("Input.txt", "r").read()
Dictionary, EncoderOutput, = {}, np.array([])

cur_time = time.time()
filename = open('txt.txt', "r").read()
InitializeDict(filename)
RunLZW(filename)
print(time.time() - cur_time, 'lzw')
EncoderOutput = np.array([])
Document, Dictionary = "", {}


Load()
RunInverseLZW()

